{
  "info": {
    "_postman_id": "6bc6751d-21c5-4a39-af22-f94c003ca0ce",
    "name": "BbyCrmTestSuite",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Login/Register",
      "item": [
        {
          "name": "Successful Cases",
          "item": [
            {
              "name": "Register new user",
              "id": "0fd89147-ce62-458d-b540-ecec83aec757",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"name\": \"{{userName}}\",\r\n    \"businessName\": \"{{userBusinessName}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signup"
              },
              "response": []
            },
            {
              "name": "Sign in",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "26b7a649-b9d7-4ff1-81e5-1ca908636cfa",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"User Found and Logged In\", () => {\r",
                      "    pm.expect(response).to.be.an('object');\r",
                      "});\r",
                      "\r",
                      "pm.environment.set(\"userId\", response.id);\r",
                      "pm.environment.set(\"accessToken\", response.accessToken);\r",
                      "\r",
                      "pm.test(\"Correct user info registered in database\", () => {\r",
                      "    pm.expect(response.name).to.eql(pm.environment.get(\"userName\"));\r",
                      "    pm.expect(response.businessName).to.eql(pm.environment.get(\"userBusinessName\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "751130ba-6fde-4293-8132-533810fd2d8d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signin"
              },
              "response": []
            }
          ],
          "id": "bc4f52e6-3f56-4ec2-ac90-bc4a4b0155e7",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ff338472-5f2b-4f19-8e51-45c2747d372e",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8bf75a99-c32b-4c60-80d5-324ac470db3a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Failing Cases",
          "item": [
            {
              "name": "Register new user with existing email",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab1cc3e8-26cb-431a-8fde-1592baa7e94c",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ec003cb2-86b7-451e-bd0c-46ed976eb4d9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"FailedPw12#\",\r\n    \"name\": \"FailedName\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signup"
              },
              "response": []
            },
            {
              "name": "Register without email",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "423751f1-2325-4425-ad58-f1c78ed97bb2",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "1aacd906-589e-49b8-b5b2-1afa9d26e1af",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{   \r\n    \"name\": \"FailedGamer\",\r\n    \"password\": \"Fai!edGam3r\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signup"
              },
              "response": []
            },
            {
              "name": "Register without name",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a9f4fd70-f693-45bd-969c-91cb261b6b23",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "aabf9223-207e-41c6-858b-e4b948e1e985",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{   \r\n    \"email\": \"failed@gamer.com\",\r\n    \"password\": \"Fai!edGam3r\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signup"
              },
              "response": []
            },
            {
              "name": "Register without password",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3137b0b9-cd32-4e20-90ed-59cdb2a1905b",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {\r",
                      "    pm.response.to.have.status(400);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "67324864-cdbd-457e-90a9-a014418242ff",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{   \r\n    \"email\": \"failed@gamer.com\",\r\n    \"name\": \"Failed Gamer\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signup"
              },
              "response": []
            },
            {
              "name": "Sign in to user account wrong password",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fd36dbc6-31a0-454f-8498-edf43338ea7e",
                    "exec": [
                      "pm.test(\"Status code is 401\", function () {\r",
                      "    pm.response.to.have.status(401);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "7ac8e31a-5e00-4fcf-810d-524b49007460",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"WrongPW12#\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signin"
              },
              "response": []
            },
            {
              "name": "Sign in with non existant account",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "34357951-0fa7-442e-8afc-be98ed0f1c58",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {\r",
                      "    pm.response.to.have.status(404);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "ed69c886-8c48-4d17-8b29-fc56a84138bb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"non@existant.com\",\r\n    \"password\": \"WrongPW12#\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/user/signin"
              },
              "response": []
            }
          ],
          "id": "54f4ae5a-4479-4e12-bef6-9aac89f4d3f4",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2ff3dd6a-2365-44b7-a24c-b3444e2534d8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "df42067a-71df-46dd-9d32-1daa99a1eb0f",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ]
        }
      ],
      "id": "261221e4-06d7-4ad9-a98c-3ddaa08c642d"
    },
    {
      "name": "Contacts",
      "item": [
        {
          "name": "Successful Cases",
          "item": [
            {
              "name": "Create new contact C1",
              "id": "4ad27980-6e6c-4ca1-ae44-9640e5dca43f",
              "protocolProfileBehavior": {
                "disabledSystemHeaders": {},
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{contactName1}}\",\r\n    \"email\": \"{{contactEmail1}}\",\r\n    \"phoneNumber\": \"{{contactPhone1}}\",\r\n    \"description\": \"{{contactDescription1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/contact/new"
              },
              "response": []
            },
            {
              "name": "Create new contact C2",
              "id": "2a9037b4-eb5d-471c-8df8-f6cf05486f98",
              "protocolProfileBehavior": {
                "disabledSystemHeaders": {},
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{contactName2}}\",\r\n    \"email\": \"{{contactEmail2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/contact/new"
              },
              "response": []
            },
            {
              "name": "Get all contacts of a user",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "13eb9e6e-172a-43cc-8f8c-91da2445a68a",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"C1 & C2 exists\", () => {\r",
                      "    pm.expect(response.length).to.equal(2);\r",
                      "});\r",
                      "\r",
                      "const C1 = response[0];\r",
                      "const C2 = response[1];\r",
                      "\r",
                      "pm.environment.set(\"contactId1\", C1._id);\r",
                      "pm.environment.set(\"contactId2\", C2._id);\r",
                      "\r",
                      "pm.test(\"C1 stored correctly\", () => {\r",
                      "    pm.expect(C1.name).to.eql(pm.environment.get(\"contactName1\"));\r",
                      "    pm.expect(C1.email).to.eql(pm.environment.get(\"contactEmail1\"));\r",
                      "    pm.expect(C1.phoneNumber).to.eql(pm.environment.get(\"contactPhone1\"));\r",
                      "    pm.expect(C1.description).to.eql(pm.environment.get(\"contactDescription1\"));\r",
                      "});\r",
                      "\r",
                      "pm.test(\"C2 stored correctly\", () => {\r",
                      "    pm.expect(C2.name).to.eql(pm.environment.get(\"contactName2\"));\r",
                      "    pm.expect(C2.email).to.eql(pm.environment.get(\"contactEmail2\"));\r",
                      "    pm.expect(C2.phoneNumber).to.eql(undefined);\r",
                      "    pm.expect(C2.description).to.eql(undefined);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "cf828f99-9db3-47d4-8fda-b94c877a670e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{rootUrl}}/api/contact/getAll?userId={{userId}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "contact",
                    "getAll"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update contact",
              "id": "1b0db9ca-4eab-49e2-9f3d-2d4d019e3709",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"contactId\": \"{{contactId1}}\",\r\n    \"name\": \"{{contactName1}}\",\r\n    \"email\": \"{{contactEmailUpdated}}\",\r\n    \"phoneNumber\": \"{{contactPhone1}}\",\r\n    \"description\": \"{{contactDescription1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/contact/update"
              },
              "response": []
            },
            {
              "name": "Get one contact",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2a4833f5-3856-4d58-a869-2c1ff906e605",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Got the right contact back\", () => {\r",
                      "    pm.expect(response).to.be.an('object');\r",
                      "    pm.expect(response.name).to.eql(pm.environment.get(\"contactName1\"));\r",
                      "    pm.expect(response.email).to.eql(pm.environment.get(\"contactEmailUpdated\"));\r",
                      "    pm.expect(response.phoneNumber).to.eql(pm.environment.get(\"contactPhone1\"));\r",
                      "    pm.expect(response.description).to.eql(pm.environment.get(\"contactDescription1\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "f28a0588-56c5-4c8a-8090-8add82552bf9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{rootUrl}}/api/contact/get?userId={{userId}}&contactId={{contactId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "contact",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "contactId",
                      "value": "{{contactId1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete one contact",
              "id": "264b895e-6c2c-464d-9af9-cb3860b5dace",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"contactId\": \"{{contactId1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/contact/deleteOne"
              },
              "response": []
            },
            {
              "name": "Check contact has been deleted",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "941dc0e9-7ec2-4d39-9e9e-7e4636a9a72e",
                    "exec": [
                      "pm.test(\"Contact deleted successfully\", () => {\r",
                      "    var res = (_.isEmpty(pm.responseBody));\r",
                      "    pm.expect(res).to.be.true;\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "d96d1e59-ae79-45d7-854f-f6fd8dbaa90f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{rootUrl}}/api/contact/get?userId={{userId}}&contactId={{contactId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "contact",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "contactId",
                      "value": "{{contactId1}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "ac9f9269-5db0-4244-9eba-ae007c01fa6f",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "820c1848-a9db-4d01-9da3-d7e9db2700b0",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "08116b22-d23d-477c-9583-c60567c17d54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Failing Cases",
          "item": [
            {
              "name": "Create contact without name",
              "id": "25c85000-2f89-4bf5-b777-e94d8f9af89c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"email\": \"gamer@games.com\",\r\n    \"description\": \"splatoon gamer\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/contact/new"
              },
              "response": []
            },
            {
              "name": "Create contact without userId",
              "id": "f9157144-e217-4270-8b93-b613fff739c0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Link\",\r\n    \"phoneNumber\": \"12312412\",\r\n    \"description\": \"zelda gamer\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/contact/new"
              },
              "response": []
            }
          ],
          "id": "eb341c38-d314-47a5-a348-c24b76721bdd",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f57fdd2b-caab-496e-abad-ddbf23ff1878",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2f2fd9cf-58a8-404f-96cc-cc06df8ec18d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ],
      "id": "7e2da2d5-ac76-466d-b1d7-cbdf5f0393ff"
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Successful Cases",
          "item": [
            {
              "name": "Create new category G1",
              "id": "b883670d-f423-4b35-92ee-b6b982a2dff7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{categoryName1}}\",\r\n    \"colour\": \"{{categoryColour1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/new"
              },
              "response": []
            },
            {
              "name": "Create new category G2",
              "id": "0068b70f-f0df-4e56-9972-d45bc631083c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{categoryName2}}\",\r\n    \"colour\": \"{{categoryColour2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/new"
              },
              "response": []
            },
            {
              "name": "Get all categories",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "31a9dcaf-2e40-4ad8-81ea-00e652357f20",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"G1 & G2 exists\", () => {\r",
                      "    pm.expect(response.length).to.equal(2);\r",
                      "});\r",
                      "\r",
                      "const G1 = response[0];\r",
                      "const G2 = response[1];\r",
                      "\r",
                      "pm.environment.set(\"categoryId1\", G1._id);\r",
                      "pm.environment.set(\"categoryId2\", G2._id);\r",
                      "\r",
                      "pm.test(\"G1 stored correctly\", () => {\r",
                      "    pm.expect(G1.name).to.eql(pm.environment.get(\"categoryName1\"));\r",
                      "    pm.expect(G1.colour).to.eql(pm.environment.get(\"categoryColour1\"));\r",
                      "});\r",
                      "\r",
                      "pm.test(\"G2 stored correctly\", () => {\r",
                      "    pm.expect(G2.name).to.eql(pm.environment.get(\"categoryName2\"));\r",
                      "    pm.expect(G2.colour).to.eql(pm.environment.get(\"categoryColour2\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "3fcc14ea-5d36-4517-985e-07ade7cc2e41",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{rootUrl}}/api/category/getAll?userId={{userId}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "category",
                    "getAll"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update category",
              "id": "2b4d65d9-5f0a-4234-8186-77f8a42ee7fc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"categoryId\": \"{{categoryId1}}\",\r\n    \"name\": \"{{categoryName1}}\",\r\n    \"colour\": \"{{categoryColourUpdated}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/update"
              },
              "response": []
            },
            {
              "name": "Get one category",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9ac148c8-dd26-4ec0-8798-623f1773f5be",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Got the right category back\", () => {\r",
                      "    pm.expect(response).to.be.an('object');\r",
                      "    pm.expect(response.name).to.eql(pm.environment.get(\"categoryName1\"));\r",
                      "    pm.expect(response.colour).to.eql(pm.environment.get(\"categoryColourUpdated\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "e0f7fec2-d306-4334-92b5-adb3afb9ce1c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "x-access-token",
                    "value": "{{accessToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{rootUrl}}/api/category/get?userId={{userId}}&categoryId={{categoryId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "category",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "categoryId",
                      "value": "{{categoryId1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete one category",
              "id": "e7c53048-85f8-4fc1-a8bd-653d881b9444",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"categoryId\": \"{{categoryId1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/deleteOne"
              },
              "response": []
            },
            {
              "name": "Check category deleted successfully",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "06e02e89-253c-4f13-85ac-cd6085c417b0",
                    "exec": [
                      "pm.test(\"Contact deleted successfully\", () => {\r",
                      "    var res = (_.isEmpty(pm.responseBody));\r",
                      "    pm.expect(res).to.be.true;\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "376cccb9-197c-49e9-a4d1-60f6af09080d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/category/get?userId={{userId}}&categoryId={{categoryId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "category",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "categoryId",
                      "value": "{{categoryId1}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "c9bd3bee-6e1d-43c8-956f-139e26b732ef",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "33c55e4f-81be-42ca-86a2-6af2f7b7960d",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "6ab58856-ad62-4f3a-8be0-0e83df085074",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Failing Cases",
          "item": [
            {
              "name": "New category without name",
              "id": "b22757db-4c31-401a-9357-e1ce7041635b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"colour\": \"#ffffff\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/new"
              },
              "response": []
            },
            {
              "name": "New category without colour",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e418c8a-1f66-4f4e-97a5-e83fb1b6f95b",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "c0305c9e-c316-46e3-af8a-012dd604bed1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"game\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/new"
              },
              "response": []
            }
          ],
          "id": "ba0d50c0-e169-4e6e-a9b6-2aa2c1c4cdb2",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "2411124f-430f-4b3b-90cd-315815b93cdf",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2f90bfbb-d0f6-491e-9fe4-33c22cbc56e0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ],
      "id": "5f278bb1-661f-4cf3-8ff4-77a3cc523472"
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Successful Cases",
          "item": [
            {
              "name": "New product with category",
              "id": "f0fd4c39-b593-42c3-8794-7b012642f84c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{productName1}}\",\r\n    \"price\": {{productPrice1}},\r\n    \"categoryId\": \"{{categoryId2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/new"
              },
              "response": []
            },
            {
              "name": "New product without category",
              "id": "4eecb070-94c5-4bca-a1b8-7a458972640e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{productName2}}\",\r\n    \"price\": {{productPrice2}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/new"
              },
              "response": []
            },
            {
              "name": "New product for testing",
              "id": "4ed550de-10d6-499f-84f9-5732f14e20c1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"{{productName3}}\",\r\n    \"price\": {{productPrice3}},\r\n    \"categoryId\": \"{{categoryId2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/new"
              },
              "response": []
            },
            {
              "name": "Get all product",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee68cbcf-38a6-4397-8ab3-b87506df36e6",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"P1 & P2 exists\", () => {\r",
                      "    pm.expect(response.length).to.equal(3);\r",
                      "});\r",
                      "\r",
                      "const P1 = response[0];\r",
                      "const P2 = response[1];\r",
                      "const P3 = response[2];\r",
                      "\r",
                      "pm.environment.set(\"productId1\", P1._id);\r",
                      "pm.environment.set(\"productId2\", P2._id);\r",
                      "pm.environment.set(\"productId3\", P3._id);\r",
                      "\r",
                      "pm.test(\"P1 stored correctly\", () => {\r",
                      "    pm.expect(P1.name).to.eql(pm.environment.get(\"productName1\"));\r",
                      "    pm.expect(P1.price).to.eql(parseFloat(pm.environment.get(\"productPrice1\")));\r",
                      "    pm.expect(P1.categoryId).to.eql(pm.environment.get(\"categoryId2\"));\r",
                      "});\r",
                      "\r",
                      "pm.test(\"P2 stored correctly\", () => {\r",
                      "    pm.expect(P2.name).to.eql(pm.environment.get(\"productName2\"));\r",
                      "    pm.expect(P2.price).to.eql(parseFloat(pm.environment.get(\"productPrice2\")));\r",
                      "});\r",
                      "\r",
                      "pm.test(\"P3 stored correctly\", () => {\r",
                      "    pm.expect(P3.name).to.eql(pm.environment.get(\"productName3\"));\r",
                      "    pm.expect(P3.price).to.eql(parseFloat(pm.environment.get(\"productPrice3\")));\r",
                      "    pm.expect(P3.categoryId).to.eql(pm.environment.get(\"categoryId2\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "58153189-16d4-4831-a1f5-c9a9545de49c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/product/getAll?userId={{userId}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "product",
                    "getAll"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update a product",
              "id": "fd2a6042-6368-40be-977c-36fcdfb7b496",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productId\": \"{{productId1}}\",\r\n    \"name\": \"{{productName1}}\",\r\n    \"price\": {{productPriceUpdated}},\r\n    \"categoryId\": \"{{categoryId2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/update"
              },
              "response": []
            },
            {
              "name": "Get one product",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c7c1e40-cb2a-42f2-b440-d4f906228cfc",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Got product correctly\", () => {\r",
                      "    pm.expect(response).to.be.an('object');\r",
                      "    pm.expect(response.name).to.eql(pm.environment.get(\"productName1\"));\r",
                      "    pm.expect(response.price).to.eql(parseFloat(pm.environment.get(\"productPriceUpdated\")));\r",
                      "    pm.expect(response.categoryId).to.eql(pm.environment.get(\"categoryId2\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "528930b2-d26b-4ea0-bf40-88609a00d211",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/product/get?userId={{userId}}&productId={{productId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "product",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "productId",
                      "value": "{{productId1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete one product",
              "id": "84cbc54a-2e83-444b-9776-25127bb430aa",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productId\": \"{{productId1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/deleteOne"
              },
              "response": []
            },
            {
              "name": "Check product deleted",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "669865a8-6f9b-42c1-a066-f0d2a27e915d",
                    "exec": [
                      "pm.test(\"Contact deleted successfully\", () => {\r",
                      "    var res = (_.isEmpty(pm.responseBody));\r",
                      "    pm.expect(res).to.be.true;\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9e571fee-2a23-4475-afa6-3b13151da213",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/product/get?userId={{userId}}&productId={{productId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "product",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "productId",
                      "value": "{{productId1}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "624250d4-cfc5-415e-8949-1d6658e245f9",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "85469c56-89f2-403e-8752-e31864a04b29",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "563855c4-16b4-40d8-9a6a-70d19a677451",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Failing Cases",
          "item": [
            {
              "name": "New product without name",
              "id": "9f15119c-6853-4c07-a9a6-c1bdc3599e24",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"price\": 10.00\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/new"
              },
              "response": []
            },
            {
              "name": "New product without price",
              "id": "aa8e9a90-620c-45e2-8730-4bb1d454bfee",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{ \r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"failedProduct\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/new"
              },
              "response": []
            },
            {
              "name": "Delete category currently in use by a product",
              "id": "b0295fb7-63a7-4a82-a004-3f5fb8e23221",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"categoryId\": \"{{categoryId2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/category/deleteOne"
              },
              "response": []
            }
          ],
          "id": "af5e3f54-33ec-4465-acce-9dcb95d09578",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "fef31fbb-c8df-493c-b56e-38e84ebf4122",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bda87ba6-e4d8-4305-a1e1-de4e3e8ad7fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ],
      "id": "5f3f13f6-0652-4c4f-8408-247d956ea391"
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Successful Cases",
          "item": [
            {
              "name": "New transaction T1",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "dd31ebbd-dc4c-4afe-b346-11cf037aeb05",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "0ad88576-6e38-431a-b8ba-6266737ac565",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productsPurchased\": [\r\n        {\r\n            \"productId\": \"{{productId3}}\",\r\n            \"quantity\": {{transactionQuantity1_1}},\r\n            \"price\": {{productPrice3}}\r\n        },\r\n        {\r\n            \"productId\": \"{{productId2}}\",\r\n            \"quantity\": {{transactionQuantity1_2}},\r\n            \"price\": {{productPrice2}}\r\n        }\r\n    ], \r\n    \"contactId\": \"{{contactId2}}\",\r\n    \"transactionRating\": {{transactionRating1}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/new"
              },
              "response": []
            },
            {
              "name": "New transaction T2",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6453c2c3-58cb-469b-8cb1-cf08642d1733",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "b2fc48bd-6e7b-438a-a352-c2f3a0e4ac06",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productsPurchased\": [\r\n        {\r\n            \"productId\": \"{{productId2}}\",\r\n            \"quantity\": {{transactionQuantity2}},\r\n            \"price\": {{productPrice2}}\r\n        }\r\n    ], \r\n    \"contactId\": \"{{contactId2}}\",\r\n    \"transactionRating\": {{transactionRating2}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/new"
              },
              "response": []
            },
            {
              "name": "Get all transactions",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8f66cbb0-de38-40bd-bd13-35866259fa44",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "9d92415f-8637-46f9-8586-2c6d8a0ec658",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "pm.test(\"T1 & T2 exists\", () => {\r",
                      "    pm.expect(response.length).to.equal(2);\r",
                      "});\r",
                      "\r",
                      "const T1 = response[0];\r",
                      "const T2 = response[1];\r",
                      "\r",
                      "pm.environment.set(\"transactionId1\", T1._id);\r",
                      "pm.environment.set(\"transactionId2\", T2._id);\r",
                      "\r",
                      "pm.test(\"T1 stored correctly\", () => {\r",
                      "    pm.expect(T1.contactName).to.eql(pm.environment.get(\"contactName2\"));\r",
                      "});\r",
                      "\r",
                      "pm.test(\"T2 stored correctly\", () => {\r",
                      "    pm.expect(T2.contactName).to.eql(pm.environment.get(\"contactName2\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "cc3bac9d-1109-4f5d-ade5-7180991b4b0f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/transaction/getAll?userId={{userId}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "transaction",
                    "getAll"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update transaction",
              "id": "aa439c6b-5c5f-46db-b5cd-fcd1224441c4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"transactionId\": \"{{transactionId1}}\",\r\n    \"userId\": \"{{userId}}\",\r\n    \"productsPurchased\": [\r\n        {\r\n            \"productId\": \"{{productId3}}\",\r\n            \"quantity\": {{transactionQuantity1_1}},\r\n            \"price\": {{productPrice3}}\r\n        },\r\n        {\r\n            \"productId\": \"{{productId2}}\",\r\n            \"quantity\": {{transactionQuantityUpdated}},\r\n            \"price\": {{productPrice2}}\r\n        }\r\n    ], \r\n    \"contactId\": \"{{contactId2}}\",\r\n    \"transactionRating\": {{transactionRating1}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/update"
              },
              "response": []
            },
            {
              "name": "Get one transaction",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4f7658ec-33e7-4e9e-9f8f-9873fe327f92",
                    "exec": [
                      "const response = pm.response.json();\r",
                      "\r",
                      "const p1 = response.productsPurchased[0];\r",
                      "const p2 = response.productsPurchased[1];\r",
                      "\r",
                      "pm.test(\"Got the right transaction back\", () => {\r",
                      "    pm.expect(response).to.be.an('object');\r",
                      "    pm.expect(p1.productId).to.eql(pm.environment.get(\"productId3\"));\r",
                      "    pm.expect(p1.quantity).to.eql(parseFloat(pm.environment.get(\"transactionQuantity1_1\")));\r",
                      "    pm.expect(p2.productId).to.eql(pm.environment.get(\"productId2\"));\r",
                      "    pm.expect(p2.quantity).to.eql(parseFloat(pm.environment.get(\"transactionQuantityUpdated\")));\r",
                      "    pm.expect(response.transactionRating).to.eql(parseFloat(pm.environment.get(\"transactionRating1\")));\r",
                      "    pm.expect(response.contactId).to.eql(pm.environment.get(\"contactId2\"));\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "a0791fc2-434e-425a-84fd-4d5e80e0825a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/transaction/get?userId={{userId}}&transactionId={{transactionId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "transaction",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "transactionId",
                      "value": "{{transactionId1}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete one transaction",
              "id": "577bbaa0-9868-4cd3-82e2-90f1f6511056",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"transactionId\": \"{{transactionId1}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/deleteOne"
              },
              "response": []
            },
            {
              "name": "Verify transaction deletion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bc29d36-7d67-4aee-b820-38e53a848233",
                    "exec": [
                      "pm.test(\"Transaction deleted successfully\", () => {\r",
                      "    var res = (_.isEmpty(pm.responseBody));\r",
                      "    pm.expect(res).to.be.true;\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "acb5f81a-16d5-4f82-a286-d62772464471",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{rootUrl}}/api/transaction/get?userId={{userId}}&transactionId={{transactionId1}}",
                  "host": [
                    "{{rootUrl}}"
                  ],
                  "path": [
                    "api",
                    "transaction",
                    "get"
                  ],
                  "query": [
                    {
                      "key": "userId",
                      "value": "{{userId}}"
                    },
                    {
                      "key": "transactionId",
                      "value": "{{transactionId1}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "id": "0c92eb33-7796-4cdd-bdb0-058b27adc16d",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "5995cb56-4642-401e-a25a-0898c2faf5dc",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ffb210d7-cbf6-4b4d-9517-9fa1602d13f0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Failing Cases",
          "item": [
            {
              "name": "New transaction without products",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d5d635ff-1a4e-4e48-a318-372657a60ed1",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "6e51bc1b-cd2d-470b-a465-96cf2b17af15",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"contactId\": \"{{contactId2}}\",\r\n    \"transactionRating\": {{transactionRating1}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/new"
              },
              "response": []
            },
            {
              "name": "New transaction without contact",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "77f6a86a-6ff9-4aef-adbf-83fc33d28491",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "dacade13-f3ed-4ed3-97a4-884a0ac5c2a3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productsPurchased\": [\r\n        {\r\n            \"productId\": \"{{productId2}}\",\r\n            \"quantity\": {{transactionQuantity2}},\r\n            \"price\": {{productPrice2}}\r\n        }\r\n    ], \r\n    \"transactionRating\": {{transactionRating2}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/new"
              },
              "response": []
            },
            {
              "name": "New transaction without price for product",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc67281d-87c9-49a6-8fa1-31d2c37ac963",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "4cbdf832-1dea-425b-80ec-856fa921e815",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productsPurchased\": [\r\n        {\r\n            \"productId\": \"{{productId2}}\",\r\n            \"quantity\": {{transactionQuantity2}}\r\n        }\r\n    ], \r\n    \"contactId\": \"{{contactId2}}\",\r\n    \"transactionRating\": {{transactionRating2}}\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/transaction/new"
              },
              "response": []
            },
            {
              "name": "Delete product still in use by a transaction",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c82eb102-1ee8-475b-8a69-91afa6c1da67",
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "id": "9373f7ec-9fca-4c66-a4a7-61fb92a021ca",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"productId\": \"{{productId2}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": "{{rootUrl}}/api/product/deleteOne"
              },
              "response": []
            }
          ],
          "id": "a952783c-eb3f-4e30-b862-7aababd9e611",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4ae26dcd-51b6-43e5-8f9d-9291c6d687ab",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bc5ced4f-946e-43f1-bd84-4301665c96ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ],
      "id": "919ccad3-cf14-4d45-89f2-1fad615a62b8"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "UpdateUser",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cc63629-c1fb-4b51-a653-e444b724cfc0",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "22924ce3-3f50-4dd6-abb6-692ebb25d953",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"name\": \"{{userName}}\",\r\n    \"businessName\": \"{{userBusinessNameUpdated}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{rootUrl}}/api/user/update"
          },
          "response": []
        },
        {
          "name": "Verify user update",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f92318fd-75ae-492a-a113-52474eae8792",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"User Found and Logged In\", () => {\r",
                  "    pm.expect(response).to.be.an('object');\r",
                  "});\r",
                  "\r",
                  "pm.environment.set(\"userId\", response.id);\r",
                  "\r",
                  "pm.test(\"Correct user info registered in database\", () => {\r",
                  "    pm.expect(response.name).to.eql(pm.environment.get(\"userName\"));\r",
                  "    pm.expect(response.businessName).to.eql(pm.environment.get(\"userBusinessNameUpdated\"));\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "5534bbbf-2535-46e1-b33a-0c49199e79a3",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{rootUrl}}/api/user/signin"
          },
          "response": []
        },
        {
          "name": "Delete account",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cb7d518-cd28-4c13-a933-3607a6630805",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "cde36b18-93c2-480a-8a2c-8634d777590c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-access-token",
                "value": "{{accessToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"userId\": \"{{userId}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{rootUrl}}/api/user/deleteAccount"
          },
          "response": []
        },
        {
          "name": "Verify user deleted",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fdb016e8-ae1c-4b24-99ef-6e29e9a4e8d3",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "2eb10d44-8786-4d95-abd8-7e5ba9d925c6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{rootUrl}}/api/user/signin"
          },
          "response": []
        },
        {
          "name": "Verify deletion of all contacts",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfb718b1-4333-4f14-b0ad-dfcb8bc23eda",
                "exec": [
                  "pm.test(\"All contacts deleted successfully\", () => {\r",
                  "    var res = (_.isEmpty(pm.responseBody));\r",
                  "    pm.expect(res).to.be.true;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "8dabfc1f-af8e-44c0-875e-2d60c41e13d6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{rootUrl}}/api/contact/getAll?userId={{userId}}",
              "host": [
                "{{rootUrl}}"
              ],
              "path": [
                "api",
                "contact",
                "getAll"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Verify deletion of all categories",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "74acb0b0-b4f9-40f3-9947-a6b604d1f3b7",
                "exec": [
                  "pm.test(\"All categories deleted successfully\", () => {\r",
                  "    var res = (_.isEmpty(pm.responseBody));\r",
                  "    pm.expect(res).to.be.true;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "c79d9eb6-40d5-4a09-a28e-d3acf6e476ab",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{rootUrl}}/api/category/getAll?userId={{userId}}",
              "host": [
                "{{rootUrl}}"
              ],
              "path": [
                "api",
                "category",
                "getAll"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Verify deletion of all product",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5b3bee70-59cc-4724-8b53-d892714059f8",
                "exec": [
                  "pm.test(\"All products deleted successfully\", () => {\r",
                  "    var res = (_.isEmpty(pm.responseBody));\r",
                  "    pm.expect(res).to.be.true;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "b75429bc-c4b2-4f4d-83a5-ed15ddf40d32",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{rootUrl}}/api/product/getAll?userId={{userId}}",
              "host": [
                "{{rootUrl}}"
              ],
              "path": [
                "api",
                "product",
                "getAll"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Verify deletion of all transactions",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a46d02f2-20fd-4f87-a316-932d33f8ad8b",
                "exec": [
                  "pm.test(\"All transactions deleted successfully\", () => {\r",
                  "    var res = (_.isEmpty(pm.responseBody));\r",
                  "    pm.expect(res).to.be.true;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "id": "d9bfbea1-6ea4-470a-ae7a-9bd2912c0c6e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{rootUrl}}/api/transaction/getAll?userId={{userId}}",
              "host": [
                "{{rootUrl}}"
              ],
              "path": [
                "api",
                "transaction",
                "getAll"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "id": "9c28f547-881c-475a-87d3-c28cbea04aaf"
    }
  ]
}